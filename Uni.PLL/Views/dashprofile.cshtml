<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Profile</title>
    <link rel="stylesheet" href="/css/dashprof.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

</head>
<body>
    <div class="dashboard-container">
        <aside class="sidebar">
            <div class="logo">Port Said University</div>
            <nav class="main-nav">
                <ul>
                    <li><a href="#">Home</a></li>
                    <li><a href="#">Messages</a></li>
                    <li><a href="#">Account</a></li>
                    <li><a href="#">Chart</a></li>
                    <li><a href="#">Courses</a></li>
                    <li><a href="#"> Enrollment</a></li>
                    <li><a href="#">Log Out </a></li>

                </ul>
            </nav>
        </aside>
        <main class="main-content">
            <header class="main-header">

                <form class="d-flex" role="search">
                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="" type="submit">Search</button>
                </form>

                <div class="user-info">
                    <span>Hi ,</span>
                    <span class="user-name">User Name</span>
                    <div class="user-avatar"></div>
                </div>
            </header>
           
            <div class="profile-container">

                <div class="charts">
                 <div class="chart-box">
                   <h3>GPA Over Semesters</h3>
                   <canvas id="gpaChart"></canvas>
                 </div>
                 <div class="chart-box">
                   <h3>Credit Hours Over Semesters</h3>
                   <canvas id="creditsChart"></canvas>
                 </div>
                </div>
            </div>

        </main>
    </div>

    <section class="chatbot">
        <button id="chat-toggle" class="chat-btn">ðŸ’¬ chat With Us</button>

        <div class="chat-popup" id="chat-popup">

            <div class="chat-header">
                <span>Hello!</span>
                <button id="chat-close">&times;</button>
            </div>
            <!-- first dashboard of chatbot -->
            <div class="chat-body" id="chat-greeting">
                <p>I'm your personal assistant,<br>How can I help you?</p>
                <button class="start-chat" id="start-chat">Let's chat</button>
            </div>
            <!-- second dashboard of chatbot -->
            <div class="chat-interface" id="chat-interface" style="display: none;">
                <div class="chat-messages" id="chat-messages">
                    <!-- Messages will appear here -->
                </div>
                <div class="chat-input-area">
                    <input type="text" id="user-input" placeholder="Type your message..." />
                    <button id="send-btn">Send</button>
                </div>
            </div>


        </div>

    </section>
   

  <!-- Chart.js library -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // Sample data: semesters, GPA and Credit Hours
    const semesters = ['Semester 1', 'Semester 2', 'Semester 3', 'Semester 4', 'Semester 5'];
    const gpaData = [3.2, 3.5, 3.7, 3.8, 3.6];
    const creditHoursData = [15, 16, 14, 18, 17];

    // GPA Chart config
    const gpaCtx = document.getElementById('gpaChart').getContext('2d');
    const gpaChart = new Chart(gpaCtx, {
      type: 'line',
      data: {
        labels: semesters,
        datasets: [{
          label: 'GPA',
          data: gpaData,
          fill: false,
          borderColor: '#3b82f6',
          backgroundColor: '#3b82f6',
          tension: 0.3,
          pointRadius: 5,
          pointHoverRadius: 7,
        }]
      },
      options: {
        scales: {
          y: {
            min: 0,
            max: 4,
            ticks: {
              stepSize: 0.5
            },
            title: {
              display: true,
              text: 'GPA'
            }
          },
          x: {
            title: {
              display: true,
              text: 'Semester'
            }
          }
        },
        responsive: true,
        plugins: {
          legend: {
            display: true,
            position: 'top'
          },
          tooltip: {
            enabled: true
          }
        }
      }
    });

    // Credit Hours Chart config
    const creditsCtx = document.getElementById('creditsChart').getContext('2d');
    const creditsChart = new Chart(creditsCtx, {
      type: 'bar',
      data: {
        labels: semesters,
        datasets: [{
          label: 'Credit Hours',
          data: creditHoursData,
          backgroundColor: '#10b981',
          borderRadius: 5,
          barPercentage: 0.6
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true,
            title: {
              display: true,
              text: 'Credit Hours'
            }
          },
          x: {
            title: {
              display: true,
              text: 'Semester'
            }
          }
        },
        responsive: true,
        plugins: {
          legend: {
            display: true,
            position: 'top'
          },
          tooltip: {
            enabled: true
          }
        }
      }
    });
    </script>


    <script>
   const chatBtn = document.getElementById('chat-toggle');
const chatPopup = document.getElementById('chat-popup');
const chatClose = document.getElementById('chat-close');
const startChatBtn = document.getElementById('start-chat');
const greeting = document.getElementById('chat-greeting');
const chatInterface = document.getElementById('chat-interface');
const sendBtn = document.getElementById('send-btn');
const userInput = document.getElementById('user-input');
const chatMessages = document.getElementById('chat-messages');

chatBtn.addEventListener('click', () => {
  chatPopup.style.display = 'flex';
});

chatClose.addEventListener('click', () => {
  chatPopup.style.display = 'none';
});

// Show chat interface
startChatBtn.addEventListener('click', () => {
  greeting.style.display = 'none';
  chatInterface.style.display = 'flex';
});

// Send message
sendBtn.addEventListener('click', () => {
  const message = userInput.value.trim();
  if (message) {
    const userMsg = document.createElement('div');
    userMsg.style.borderRadius = "10px";
    userMsg.style.width = "fit-content";
    userMsg.style.height = "fit-content";
    userMsg.style.backgroundColor = " #5c4b7d";
    userMsg.style.color = "white";
    userMsg.style.padding = "10px";
    userMsg.textContent = message;
    userMsg.style.margin = "10px 0";
    userMsg.style.position = "relative";
    userMsg.style.textAlign = "left";
    userMsg.style.maxWidth = "80%";
    chatMessages.appendChild(userMsg);
    userInput.value = "";


    // Simulated bot response (optional)
    const botMsg = document.createElement('div');
    //  response of chatbot
    botMsg.textContent = "thank vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv";
    botMsg.style.borderRadius = "10px";
    botMsg.style.width = "fit-content";
    botMsg.style.height = "fit-content";
    botMsg.style.padding = "10px";
    botMsg.style.backgroundColor = "#f5f5f5";
    botMsg.style.margin = "10px 0";
    botMsg.style.textAlign = "left";
    botMsg.style.right = "0px";
    botMsg.style.color = "black";
    botMsg.style.position = "relative";
    botMsg.style.maxWidth = "80%";
    botMsg.style.marginLeft = "auto";
    chatMessages.appendChild(botMsg);

    chatMessages.scrollTop = chatMessages.scrollHeight;
  }
});



    </script>



          
</body>
</html>